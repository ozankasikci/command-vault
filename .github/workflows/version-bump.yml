name: Version Bump

on:
  pull_request:
    types: [labeled]
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.labels.*.name, 'bump:major') ||
        contains(github.event.pull_request.labels.*.name, 'bump:minor') ||
        contains(github.event.pull_request.labels.*.name, 'bump:patch')
      ))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install cargo-bump
        run: cargo install cargo-bump

      - name: Determine bump type from label
        if: github.event_name == 'pull_request'
        id: bump-type-label
        run: |
          if [[ ${{ contains(github.event.pull_request.labels.*.name, 'bump:major') }} == 'true' ]]; then
            echo "bump_type=major" >> $GITHUB_OUTPUT
          elif [[ ${{ contains(github.event.pull_request.labels.*.name, 'bump:minor') }} == 'true' ]]; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT
          else
            echo "bump_type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Get bump type
        id: bump-type
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "type=${{ github.event.inputs.bump_type }}" >> $GITHUB_OUTPUT
          else
            echo "type=${{ steps.bump-type-label.outputs.bump_type }}" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: bump
        run: |
          # Get current version
          CURRENT_VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          
          # Bump version
          cargo bump ${{ steps.bump-type.outputs.type }}
          
          # Get new version
          NEW_VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          
          echo "old_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: github.event_name == 'workflow_dispatch'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore: bump version ${{ steps.bump.outputs.old_version }} → ${{ steps.bump.outputs.new_version }}"
          title: "chore: bump version ${{ steps.bump.outputs.old_version }} → ${{ steps.bump.outputs.new_version }}"
          body: |
            Automated version bump from ${{ steps.bump.outputs.old_version }} to ${{ steps.bump.outputs.new_version }}
            
            This PR was created automatically by the version bump workflow.
          branch: "bump-version/${{ steps.bump.outputs.new_version }}"
          delete-branch: true
          labels: |
            version-bump
            automated-pr

      - name: Commit changes
        if: github.event_name == 'pull_request'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "chore: bump version ${{ steps.bump.outputs.old_version }} → ${{ steps.bump.outputs.new_version }}"
          git push
